name: 'Publish'

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    name: Build (${{ matrix.name }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            name: Windows-x64
            triplet: x64-windows-static
          - os: ubuntu-latest
            name: Linux-x64
            triplet: x64-linux
          - os: self-hosted-macos-m1 
            name: macOS-arm64
            triplet: arm64-osx
          # - os: self-hosted-linux-arm64
          #   name: Linux-arm64
          #   triplet: arm64-linux

    env:
      VCPKG_DEFAULT_TRIPLET: ${{ matrix.triplet }}

    steps:
      - name: 'Install SDL2 dev'
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libsdl2-dev
      - name: 'Checkout'
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.PAT }}
          submodules: recursive

      - name: 'Install CMake'
        uses: lukka/get-cmake@latest

      - name: 'Setup vcpkg'
        uses: lukka/run-vcpkg@v10

      - name: 'Run CMake'
        uses: lukka/run-cmake@v10
        with:
          configurePreset: ninja-multi-vcpkg
          buildPreset: ninja-multi-vcpkg

      - name: 'Upload build'
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.name }}
          path: builds/ninja-multi-vcpkg/Release/

  changelog:
    name: 'Get the changelog'
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.PAT }}
    
      # - name: 'Get the changelog'
      #   id: changelog
      #   uses: mikepenz/release-changelog-builder-action@v3
      #   with:
      #     token: ${{ secrets.PAT }}

      # - name: 'Print the changelog'
      #   run: echo "${{ steps.changelog.outputs.changelog }}"

      # - name: 'Save to markdown file'
      #   run: echo "${{ steps.changelog.outputs.changelog }}" > changelog.md

      - name: 'Upload the changelog'
        uses: actions/upload-artifact@v2
        with:
          name: changelog
          path: CHANGELOG.md

  publish:
    name: 'Publish'
    runs-on: ubuntu-latest
    needs: changelog

    steps:
      - name: 'Download builds'
        uses: actions/download-artifact@v2
        with:
          path: build

      - name: 'Download changelog'
        uses: actions/download-artifact@v2
        with:
          name: changelog
          path: changelog

      - name: 'Zip builds'
        run: |
          cd build
          ls -l
          zip -r linux-x64.zip Linux-x64
          zip -r windows-x64.zip Windows-x64
          zip -r macos-arm64.zip macOS-arm64
          cd ../

      - name: 'Move changelog to root folder'
        run: |
          mv changelog/CHANGELOG.md .
          cp CHANGELOG.md build/README.md

      - name: 'Push to builds repo'
        uses: cpina/github-action-push-to-another-repository@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.PAT }}
        with:
          source-directory: build
          destination-github-username: SPC-H-Avans
          destination-repository-name: game-builds
          user-email: 41898282+github-actions[bot]@users.noreply.github.com
          target-branch: main
          commit-message: ${{ github.sha }}

      - name: 'Create new release'
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/linux-x64.zip,build/windows-x64.zip,build/macos-arm64.zip"
          tag: ${{ github.ref }}
          name: Release ${{ github.ref }}
          bodyFile: CHANGELOG.md
          owner: SPC-H-Avans
          repo: game-builds
          token: ${{ secrets.PAT }}

      - name: 'Delete builds'
        uses: geekyeggo/delete-artifact@v1
        with:
          name: |
            Linux-x64
            Windows-x64
            macOS-arm64
            Linux-arm64
          failOnError: false

      - name: 'Delete changelog'
        uses: geekyeggo/delete-artifact@v1
        with:
          name: changelog
          failOnError: false